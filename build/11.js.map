{"version":3,"sources":["../../src/pages/work-bench/supplier-list/supplierauto-service.ts","../../src/pages/work-bench/supplier-list/supplier-list.ts","../../src/pages/work-bench/supplier-list/supplier-list.module.ts","webpack:///./node_modules/ionic2-auto-complete/index.js?aeb2****","../../src/pages/work-bench/supplier-list/supplierlistService.ts"],"names":[],"mappings":"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AAN;QACE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACrB,CAAC;IACH,uBAAC;AAAD,CAAC;AAxGY,gBAAgB;IAN5B,gEAAS,EAAE;IACX,wDAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,WAAW,kFAAE,EAAoB;OACmB;4BACpD;2JAS4B,qBAAa;QACrB,SAAS,EAA0B,EAAmE;AA+F3H;SAxGY,gBAAgB,gB;;;;;;;;;;;;AClBY;AACO;AACG;AACO;AAa1D,IAAa,sBAAsB;IAAnC;IAAqC,CAAC;IAAD,6BAAC;AAAD,CAAC;AAAzB,sBAAsB;IAXlC,4EAAQ,CAAC;QACR,YAAY,EAAE;YACZ,gBAAgB;SACjB;QACD,OAAO,EAAE;YACP,2FAAe,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAC,gFAAkB;SAC9D;QACD,OAAO,EAAE;YACP,gBAAgB;SACjB;KACF,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;AChBqD;AACjE;AACD;AACQ;AACR;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oBAAoB,6BAA6B,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB,moBAAmoB,uBAAuB,orCAAorC,sBAAsB,sgBAAsgB,iNAAiN,OAAO,mFAAmF,6HAA6H,mBAAmB;AACryF;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,sBAAsB,6DAAc;AACpC,iBAAiB,6DAAc;AAC/B,iBAAiB,6DAAc;AAC/B,0BAA0B,6DAAc;AACxC,wBAAwB,6DAAc;AACtC,6BAA6B,6DAAc;AAC3C,kBAAkB,6DAAc;AAChC,qBAAqB,6DAAc;AACnC,mBAAmB,8DAAe;AAClC,kBAAkB,8DAAe;AACjC,sBAAsB,8DAAe;AACrC,oBAAoB,8DAAe;AACnC,qBAAqB,8DAAe;AACpC,sBAAsB,8DAAe;AACrC,uBAAuB,2FAA4C;AACnE,mBAAmB,uFAAwC;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE,gDAAgD;AACzE,gFAAgF,mBAAmB,EAAE;AACrG;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA,aAAa,IAAI;AACjB,KAAK,kEAAmB;AACxB;AACA;AACA;AACA;AACA,yCAAyC,WAAW;;AAEpD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA,iDAAiD,WAAW;;AAEpD;;;;;;;;;;;;;;;;;;;;;AC5TuD;AACpB;AAI3C,IAAa,mBAAmB;IAC5B,6BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAE5C,CAAC;IAED,6CAAe,GAAf,UAAgB,MAAM,EAAC,OAAO;QAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YACtB,KAAK,EAAC,MAAM;YACZ,MAAM,EAAC,OAAO;SACjB,CAAC,CAAC;QACJ,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IACD,8CAAgB,GAAhB,UAAiB,KAAK,EAAC,MAAM,EAAC,EAAE;QAE5B,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YACtB,KAAK,EAAC,KAAK;YACX,MAAM,EAAC,MAAM;YACb,EAAE,EAAC,EAAE;SACR,CAAC,CAAC;QACJ,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;IACzD,CAAC;IACD,4CAAc,GAAd,UAAe,IAAI;QAEf,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YACtB,IAAI,EAAC,IAAI;SACZ,CAAC,CAAC;QACJ,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,EAAC,IAAI,CAAC,CAAC;IAC5D,CAAC;IACL,0BAAC;AAAD,CAAC;AA5BY,mBAAmB;IAD/B,yDAAU,EAAE;qCAEwB,2EAAW;GADnC,mBAAmB,CA4B/B;AA5B+B","file":"11.js","sourcesContent":["import {AutoCompleteService} from 'ionic2-auto-complete';\nimport { Http } from '@angular/http';\nimport {Injectable} from \"@angular/core\";\nimport 'rxjs/add/operator/map'\n\n@Injectable()\nexport class CompleteTestService implements AutoCompleteService {\n  labelAttribute = \"name\";\n\n  constructor(private http:Http) {\n\n  }\n  getResults(keyword:string) {\n    //   this.labelAttribute = keyword;\n      console.log(keyword);\n      let obj = {\n          name:\"\",\n      }\n      obj.name = \"搜 供应商：\"+keyword;\n      let arr = [];\n      arr.push(obj);\n    return arr;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/work-bench/supplier-list/supplierauto-service.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { SupplierlistService } from './supplierlistService';\nimport { LoadingController } from 'ionic-angular';\n// import { SupplierDetailPage } from './../supplier-detail/supplier-detail'\nimport { CompleteTestService } from './supplierauto-service';\n/**\n * Generated class for the SupplierListPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-supplier-list',\n  templateUrl: 'supplier-list.html',\n  providers: [SupplierlistService,CompleteTestService]\n})\nexport class SupplierListPage {\n  items_detail: any;\n  items: any;\n  limit = 20;\n  offset = 0;\n  isMoreData = true;\n  searchName:any;\n  isSearch = false;\n  constructor(public navCtrl: NavController, \n    public navParams: NavParams, public supplierService: SupplierlistService,public completeTestService: CompleteTestService) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad SupplierListPage');\n      this.supplierService.getSupplierList(this.limit, this.offset).then((res) => {\n        console.log(res)\n        this.items = res.result.res_data;\n      })\n  }\n\n  itemSelected(event)\n  {\n    // this.searchName = '';\n    // console.log(event.name.replace(\"搜 供应商：\",\"\"));\n    // this.isSearch = true;\n    this.supplierService.searchSupplier(event.name.replace(\"搜 供应商：\",\"\")).then((res) => {\n      this.items = res.result.res_data;\n    })\n  }\n\n\n  supplier_detail(id) {\n      this.supplierService.getSupplierDetai(this.limit, this.offset, id).then((res) => {\n        console.log(res)\n        this.items_detail = res.result.res_data;\n        this.navCtrl.push('SupplierDetailPage', {\n          items: this.items_detail,\n        });\n      })\n\n  }\n\n  doRefresh(refresh) {\n    this.searchName = '';\n    this.isSearch = false;\n    this.isMoreData = true;\n    this.limit = 20;\n    this.offset = 0;\n      this.supplierService.getSupplierList(this.limit, this.offset).then((res) => {\n        console.log(res)\n        refresh.complete();\n        this.items = res.result.res_data;\n      })\n  }\n\n  doInfinite(infiniteScroll) {\n    if (this.isSearch == false)\n    {\n      if (this.isMoreData == true) {\n      this.limit = 20;\n      this.offset += 20;\n        this.supplierService.getSupplierList(this.limit, this.offset).then((res) => {\n          console.log(res)\n          let item_data = [];\n          if (res.result.res_data) {\n            item_data = res.result.res_data;\n            if (item_data.length >= 20) {\n              this.isMoreData = true;\n            }\n            else {\n              this.isMoreData = false;\n            }\n            for (let item of item_data) {\n              this.items.push(item);\n            }\n          }\n          else {\n            this.isMoreData = false;\n          }\n          infiniteScroll.complete();\n        })\n    }\n    else {\n      infiniteScroll.complete();\n    }\n  }\n  else\n  {\n    infiniteScroll.complete();\n  }\n    \n  }\n\n  searchClick()\n  {\n    this.isSearch = true;\n    this.supplierService.searchSupplier(this.searchName).then((res) => {\n      this.items = res.result.res_data;\n    })\n  }\n\n  goBack(){\n    this.navCtrl.pop();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/work-bench/supplier-list/supplier-list.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SupplierListPage } from './supplier-list';\nimport { AutoCompleteModule } from 'ionic2-auto-complete';\n\n@NgModule({\n  declarations: [\n    SupplierListPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SupplierListPage),AutoCompleteModule\n  ],\n  exports: [\n    SupplierListPage\n  ]\n})\nexport class SupplierListPageModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/work-bench/supplier-list/supplier-list.module.ts","import { Component, EventEmitter, Injectable, Input, NgModule, Output, Pipe, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { IonicModule } from 'ionic-angular';\n\n// searchbar default options\nvar defaultOpts = {\n    cancelButtonText: 'Cancel',\n    showCancelButton: false,\n    debounce: 250,\n    placeholder: '搜索',\n    autocomplete: 'off',\n    autocorrect: 'off',\n    spellcheck: 'off',\n    type: 'search',\n    value: '',\n    noItems: '',\n    clearOnEdit: false,\n    clearInput: false\n};\nvar AutoCompleteComponent = (function () {\n    /**\n     * create a new instace\n     */\n    function AutoCompleteComponent() {\n        this.hideListOnSelection = true;\n        this.showListChanged = false;\n        this.keyword = null;\n        this.suggestions = [];\n        this._showList = false;\n        this.itemSelected = new EventEmitter();\n        this.itemsShown = new EventEmitter();\n        this.itemsHidden = new EventEmitter();\n        this.ionAutoInput = new EventEmitter();\n        this.autoFocus = new EventEmitter();\n        this.autoBlur = new EventEmitter();\n        this.options = {};\n        // set default options\n        this.defaultOpts = defaultOpts;\n    }\n    Object.defineProperty(AutoCompleteComponent.prototype, \"showList\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._showList;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (this._showList === value) {\n                return;\n            }\n            this._showList = value;\n            this.showListChanged = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.ngAfterViewChecked = function () {\n        if (this.showListChanged) {\n            this.showListChanged = false;\n            this.showList ? this.itemsShown.emit() : this.itemsHidden.emit();\n        }\n    };\n    /**\n     * get items for auto-complete\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.getItems = function () {\n        var _this = this;\n        var /** @type {?} */ result;\n        if (this.showResultsFirst && !this.keyword) {\n            this.keyword = '';\n        }\n        else if (this.keyword.trim() === '') {\n            this.suggestions = [];\n            return;\n        }\n        if (typeof this.dataProvider === 'function') {\n            result = this.dataProvider(this.keyword);\n        }\n        else {\n            result = this.dataProvider.getResults(this.keyword);\n        }\n        // if result is instanceof Subject, use it asObservable\n        if (result instanceof Subject) {\n            result = result.asObservable();\n        }\n        // if query is async\n        if (result instanceof Observable) {\n            result\n                .subscribe(function (results) {\n                _this.suggestions = results;\n                _this.showItemList();\n            }, function (error) { return console.error(error); });\n        }\n        else {\n            this.suggestions = result;\n            this.showItemList();\n        }\n        // emit event\n        this.ionAutoInput.emit(this.keyword);\n    };\n    /**\n     * show item list\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.showItemList = function () {\n        this.showList = true;\n    };\n    /**\n     * hide item list\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.hideItemList = function () {\n        this.showList = this.alwaysShowList;\n    };\n    /**\n     * select item from list\n     *\n     * @param {?} selection\n     *\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.select = function (selection) {\n        // this.keyword = this.dataProvider.labelAttribute == null || selection[this.dataProvider.labelAttribute] == null\n        //     ? selection : selection[this.dataProvider.labelAttribute];\n        // if (this.hideListOnSelection) {\n        //     this.hideItemList();\n        // }\n        // // emit selection event\n        this.hideItemList();\n        this.itemSelected.emit(selection);\n        this.selection = selection;\n    };\n    /**\n     * get current selection\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.getSelection = function () {\n        return this.selection;\n    };\n    /**\n     * get current input value\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.getValue = function () {\n        return this.keyword;\n    };\n    /**\n     * set current input value\n     * @param {?} value\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.setValue = function (value) {\n        this.keyword = value;\n        return;\n    };\n    /**\n     * /**\n     * clear current input value\n     * @param {?=} hideItemList\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.clearValue = function (hideItemList) {\n        if (hideItemList === void 0) { hideItemList = false; }\n        this.keyword = null;\n        this.selection = null;\n        if (hideItemList) {\n            this.hideItemList();\n        }\n        return;\n    };\n    /**\n     * set focus of searchbar\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.setFocus = function () {\n        if (this.searchbarElem) {\n            this.searchbarElem.setFocus();\n        }\n    };\n    /**\n     * fired when the input focused\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.onFocus = function () {\n        this.autoFocus.emit();\n    };\n    /**\n     * fired when the input focused\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.onBlur = function () {\n        this.autoBlur.emit();\n    };\n    /**\n     * handle document click\n     * @param {?} event\n     * @return {?}\n     */\n    AutoCompleteComponent.prototype.documentClickHandler = function (event) {\n        if ((this.searchbarElem\n            && !this.searchbarElem._elementRef.nativeElement.contains(event.target))\n            ||\n                (!this.inputElem && this.inputElem._elementRef.nativeElement.contains(event.target))) {\n            this.hideItemList();\n        }\n    };\n    return AutoCompleteComponent;\n}());\nAutoCompleteComponent.decorators = [\n    { type: Component, args: [{\n                host: {\n                    '(document:click)': 'documentClickHandler($event)',\n                },\n                template: \"\\n      <ion-input\\n              #inputElem\\n              (keyup)=\\\"getItems($event)\\\"\\n              (tap)=\\\"showResultsFirst && getItems()\\\"\\n              [(ngModel)]=\\\"keyword\\\"\\n              [placeholder]=\\\"options.placeholder == null ? defaultOpts.placeholder : options.placeholder\\\"\\n              [type]=\\\"options.type == null ? defaultOpts.type : options.type\\\"\\n              [clearOnEdit]=\\\"options.clearOnEdit == null ? defaultOpts.clearOnEdit : options.clearOnEdit\\\"\\n              [clearInput]=\\\"options.clearInput == null ? defaultOpts.clearInput : options.clearInput\\\"\\n              [ngClass]=\\\"{'hidden': !useIonInput}\\\"\\n              (ionFocus)=\\\"onFocus()\\\"\\n              (ionBlur)=\\\"onBlur()\\\"\\n      >\\n      </ion-input>\\n      <ion-searchbar\\n              #searchbarElem\\n              (ionInput)=\\\"getItems($event)\\\"\\n              (tap)=\\\"showResultsFirst && getItems()\\\"\\n              [(ngModel)]=\\\"keyword\\\"\\n              [cancelButtonText]=\\\"options.cancelButtonText == null ? defaultOpts.cancelButtonText : options.cancelButtonText\\\"\\n              [showCancelButton]=\\\"options.showCancelButton == null ? defaultOpts.showCancelButton : options.showCancelButton\\\"\\n              [debounce]=\\\"options.debounce == null ? defaultOpts.debounce : options.debounce\\\"\\n              [placeholder]=\\\"options.placeholder == null ? defaultOpts.placeholder : options.placeholder\\\"\\n              [autocomplete]=\\\"options.autocomplete == null ? defaultOpts.autocomplete : options.autocomplete\\\"\\n              [autocorrect]=\\\"options.autocorrect == null ? defaultOpts.autocorrect : options.autocorrect\\\"\\n              [spellcheck]=\\\"options.spellcheck == null ? defaultOpts.spellcheck : options.spellcheck\\\"\\n              [type]=\\\"options.type == null ? defaultOpts.type : options.type\\\"\\n              [ngClass]=\\\"{'hidden': useIonInput}\\\"\\n              (ionClear)=\\\"clearValue(true)\\\"\\n              (ionFocus)=\\\"onFocus()\\\"\\n              (ionBlur)=\\\"onBlur()\\\"\\n      >\\n      </ion-searchbar>\\n      <ng-template #defaultTemplate let-attrs=\\\"attrs\\\">\\n          <span [innerHTML]='(attrs.labelAttribute ? attrs.data[attrs.labelAttribute] : attrs.data) | boldprefix:attrs.keyword'></span>\\n      </ng-template>\\n      <ul *ngIf=\\\"suggestions.length > 0 && showList\\\">\\n          <li *ngFor=\\\"let suggestion of suggestions\\\" (tap)=\\\"select(suggestion);$event.srcEvent.stopPropagation()\\\">\\n              <ng-template\\n                      [ngTemplateOutlet]=\\\"template || defaultTemplate\\\"\\n                      [ngOutletContext]=\\\"\\n                        {attrs:{ data: suggestion, keyword: keyword, labelAttribute: dataProvider.labelAttribute }}\\\"></ng-template>\\n          </li>\\n      </ul>\\n      <p *ngIf=\\\"suggestions.length == 0 && showList && options.noItems\\\">{{ options.noItems }}</p>\\n  \",\n                selector: 'ion-auto-complete'\n            },] },\n];\n/**\n * @nocollapse\n */\nAutoCompleteComponent.ctorParameters = function () { return []; };\nAutoCompleteComponent.propDecorators = {\n    'dataProvider': [{ type: Input },],\n    'options': [{ type: Input },],\n    'keyword': [{ type: Input },],\n    'showResultsFirst': [{ type: Input },],\n    'alwaysShowList': [{ type: Input },],\n    'hideListOnSelection': [{ type: Input },],\n    'template': [{ type: Input },],\n    'useIonInput': [{ type: Input },],\n    'autoFocus': [{ type: Output },],\n    'autoBlur': [{ type: Output },],\n    'itemSelected': [{ type: Output },],\n    'itemsShown': [{ type: Output },],\n    'itemsHidden': [{ type: Output },],\n    'ionAutoInput': [{ type: Output },],\n    'searchbarElem': [{ type: ViewChild, args: ['searchbarElem',] },],\n    'inputElem': [{ type: ViewChild, args: ['inputElem',] },],\n};\n\n/**\n * bolds the beggining of the matching string in the item\n */\nvar BoldPrefix = (function () {\n    function BoldPrefix() {\n    }\n    /**\n     * @param {?} value\n     * @param {?} keyword\n     * @return {?}\n     */\n    BoldPrefix.prototype.transform = function (value, keyword) {\n        if (!keyword)\n            return value;\n        var /** @type {?} */ escaped_keyword = keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        return value.replace(new RegExp(escaped_keyword, 'gi'), function (str) { return str.bold(); });\n    };\n    return BoldPrefix;\n}());\nBoldPrefix.decorators = [\n    { type: Pipe, args: [{\n                name: 'boldprefix'\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nBoldPrefix.ctorParameters = function () { return []; };\n\nvar AutoCompleteModule = (function () {\n    function AutoCompleteModule() {\n    }\n    /**\n     * @return {?}\n     */\n    AutoCompleteModule.forRoot = function () {\n        return {\n            ngModule: AutoCompleteModule,\n            providers: []\n        };\n    };\n    return AutoCompleteModule;\n}());\nAutoCompleteModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    IonicModule\n                ],\n                declarations: [\n                    AutoCompleteComponent,\n                    BoldPrefix\n                ],\n                exports: [\n                    AutoCompleteComponent,\n                    BoldPrefix\n                ]\n            },] },\n];\n/**\n * @nocollapse\n */\nAutoCompleteModule.ctorParameters = function () { return []; };\n\nexport { AutoCompleteModule, AutoCompleteComponent, BoldPrefix };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ionic2-auto-complete/index.js\n// module id = 700\n// module chunks = 3 5 8 9 11 13 14 17 18 19 20 23 24 25 26 27 28 31 32 33 44 45 69","import { HttpService } from './../../../providers/HttpService';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class SupplierlistService {\n    constructor(private httpservice: HttpService) {\n\n    }\n\n    getSupplierList(mlimit,moffset) {\n        let body = JSON.stringify({\n            limit:mlimit,\n            offset:moffset\n        });\n       return this.httpservice.postBody(\"get_supplier\",body);\n    }\n    getSupplierDetai(limit,offset,id)\n    {\n        let body = JSON.stringify({\n            limit:limit,\n            offset:offset,\n            id:id,\n        });\n       return this.httpservice.postBody(\"get_supplier\",body);\n    }\n    searchSupplier(name)\n    {\n        let body = JSON.stringify({\n            name:name,\n        });\n       return this.httpservice.postBody(\"search_supplier\",body);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/work-bench/supplier-list/supplierlistService.ts"],"sourceRoot":""}